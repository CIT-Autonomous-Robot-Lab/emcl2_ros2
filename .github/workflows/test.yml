name: test

on:
  push:
    branches:
      - main
    paths-ignore:
    - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
    - '**.md'

jobs: 
  test: 
    runs-on: ubuntu-22.04 
    timeout-minutes: 5
    container: osrf/ros:humble-desktop-full
    steps:
      - uses: actions/checkout@v2
      - name: apt update install
        run: |
          sudo apt update -y
          sudo apt install -y \
            psmisc \
            rsync \
            xvfb \
            ros-$ROS_DISTRO-navigation2 \
            ros-$ROS_DISTRO-nav2-bringup \
            ros-$ROS_DISTRO-turtlebot3-gazebo 
      - name: build
        run: | 
          mkdir -p /root/ros2_ws/src/emcl2_ros2/
          rsync -av ./ /root/ros2_ws/src/emcl2_ros2/
          cd /root/ros2_ws
          source /opt/ros/$ROS_DISTRO/setup.bash
          rosdep update
          rosdep install -i -y --from-path src --rosdistro $ROS_DISTRO
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release
        shell: bash
      - name: exec
        run: |
          source /root/ros2_ws/install/setup.bash
          ros2 run emcl2 test.bash
        shell: bash

  retry:
    runs-on: ubuntu-22.04
    needs: test
    if: ${{ always() && needs.test.result == 'failure' }}
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            async function run() {
              const { owner, repo } = context.repo;
              const workflow_id = context.workflow.id;
              const ref = context.ref;
              const run_id = context.runId;

              const workflow_run = await github.actions.getWorkflowRun({
                owner,
                repo,
                run_id
              });

              if (workflow_run.data.conclusion === 'failure' && 
                  workflow_run.data.status === 'completed' && 
                  workflow_run.data.run_attempt < 10) {
                await github.actions.createWorkflowDispatch({
                  owner,
                  repo,
                  workflow_id,
                  ref
                });
              }
            }
            run();

